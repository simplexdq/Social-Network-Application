{"ast":null,"code":"var _jsxFileName = \"/Users/dongqixu/Desktop/devconnector/client/src/components/dashboard/Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile == null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), \"Welcome \", user && user.name), profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DashboardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Experience, {\n    experience: profile.experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"You has not yet set a profile, please add som info\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Create Profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/dongqixu/Desktop/devconnector/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","Link","PropTypes","connect","Spinner","DashboardActions","Experience","getCurrentProfile","Dashboard","auth","user","profile","loading","name","experience","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBD,EAAAA,iBADiB;AAEjBE,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFW;AAGjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHQ,CAAD,KAIZ;AACJb,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,SAAOK,OAAO,IAAID,OAAO,IAAI,IAAtB,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,cAEWD,IAAI,IAAIA,IAAI,CAACG,IAFxB,CAFF,EAMGF,OAAO,KAAK,IAAZ,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEA,OAAO,CAACG,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,gBAMC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADF,eAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,iBAAT;AAA2B,IAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CAZJ,CAHF;AAwBD,CAjCD;;AAmCAN,SAAS,CAACO,SAAV,GAAsB;AACpBR,EAAAA,iBAAiB,EAAEL,SAAS,CAACc,IAAV,CAAeC,UADd;AAEpBR,EAAAA,IAAI,EAAEP,SAAS,CAACgB,MAAV,CAAiBD,UAFH;AAGpBN,EAAAA,OAAO,EAAET,SAAS,CAACgB,MAAV,CAAiBD;AAHN,CAAtB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX,IADsB;AAElCE,EAAAA,OAAO,EAAES,KAAK,CAACT;AAFmB,CAAZ,CAAxB;;AAKA,eAAeR,OAAO,CAACgB,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport DashboardActions from './DashboardActions'\nimport Experience from './Experience'\nimport { getCurrentProfile } from '../../actions/profile'\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile()\n  }, [getCurrentProfile])\n\n  return loading && profile == null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i>\n        Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You has not yet set a profile, please add som info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard)\n"]},"metadata":{},"sourceType":"module"}