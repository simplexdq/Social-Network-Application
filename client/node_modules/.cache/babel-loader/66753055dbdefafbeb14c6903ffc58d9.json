{"ast":null,"code":"import { GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: [],\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id === payload)\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dongqixu/Desktop/devconnector/client/src/reducers/post.js"],"names":["GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMENT","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","likes","comments","comment"],"mappings":"AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,aARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKf,SAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,KAAK,EAAEO,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,QAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,IAAI,EAAEM,OAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,QAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFF;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBP,IAAD,IAAUA,IAAI,CAACQ,GAAL,KAAaF,OAA1C,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,UAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAiBT,IAAD,IACrBA,IAAI,CAACQ,GAAL,KAAaF,OAAb,GAAuB,EAAE,GAAGN,IAAL;AAAWU,UAAAA,KAAK,EAAEJ,OAAO,CAACI;AAA1B,SAAvB,GAA2DV,IADtD,CAFF;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,IAAI,EAAE,EAAE,GAAGG,KAAK,CAACH,IAAX;AAAiBW,UAAAA,QAAQ,EAAEL;AAA3B,SAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,aAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,IAAI,EAAE,EACJ,GAAGG,KAAK,CAACH,IADL;AAEJW,UAAAA,QAAQ,EAAER,KAAK,CAACH,IAAN,CAAWW,QAAX,CAAoBJ,MAApB,CACPK,OAAD,IAAaA,OAAO,CAACJ,GAAR,KAAgBF,OADrB;AAFN,SAFD;AAQLL,QAAAA,OAAO,EAAE;AARJ,OAAP;;AAUF;AACE,aAAOE,KAAP;AAzDJ;AA2DD","sourcesContent":["import {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  REMOVE_COMENT,\n} from '../actions/types'\n\nconst initialState = {\n  posts: [],\n  post: [],\n  loading: true,\n  error: {},\n}\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      }\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      }\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      }\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      }\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      }\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      }\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      }\n    case REMOVE_COMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id === payload\n          ),\n        },\n        loading: false,\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}