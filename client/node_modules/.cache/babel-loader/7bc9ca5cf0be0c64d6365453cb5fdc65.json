{"ast":null,"code":"var _jsxFileName = \"/Users/dongqixu/Desktop/devconnector/client/src/components/profile/ProfileGithub.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }); //   return (\n  //     <div className='profile-github'>\n  //       <h2 className='text-primary my-1'>Github Repos</h2>\n  //       {repos === null ? (\n  //         <Spinner />\n  //       ) : (\n  //         repos.map((repo) => (\n  //           <div key={repo._id} className='repo bg-white p-1 my-1'>\n  //             <div>\n  //               <h4>\n  //                 <a\n  //                   href={repo.html_url}\n  //                   target='_blank'\n  //                   rel='noopener noreferrer'\n  //                 >\n  //                   {repo.name}\n  //                 </a>\n  //               </h4>\n  //             </div>\n  //           </div>\n  //         ))\n  //       )}\n  //     </div>\n  //   )\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["/Users/dongqixu/Desktop/devconnector/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","ProfileGithub","username","repos","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,cAAZ;AAA4BG,EAAAA;AAA5B,CAAD,KAAyC;AAC7DP,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACE,QAAD,CAAd;AACD,GAFQ,EAEN,CAACF,cAAD,CAFM,CAAT;AAGA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAJ6D,CAK7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA7BD;;AA+BAC,aAAa,CAACG,SAAd,GAA0B;AACxBJ,EAAAA,cAAc,EAAEH,SAAS,CAACQ,IAAV,CAAeC,UADP;AAExBH,EAAAA,KAAK,EAAEN,SAAS,CAACU,KAAV,CAAgBD,UAFC;AAGxBJ,EAAAA,QAAQ,EAAEL,SAAS,CAACW,MAAV,CAAiBF;AAHH,CAA1B;;AAKA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,KAAK,EAAEO,KAAK,CAACC,OAAN,CAAcR;AADa,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getGithubRepos } from '../../actions/profile'\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username)\n  }, [getGithubRepos])\n  return <div></div>\n  //   return (\n  //     <div className='profile-github'>\n  //       <h2 className='text-primary my-1'>Github Repos</h2>\n  //       {repos === null ? (\n  //         <Spinner />\n  //       ) : (\n  //         repos.map((repo) => (\n  //           <div key={repo._id} className='repo bg-white p-1 my-1'>\n  //             <div>\n  //               <h4>\n  //                 <a\n  //                   href={repo.html_url}\n  //                   target='_blank'\n  //                   rel='noopener noreferrer'\n  //                 >\n  //                   {repo.name}\n  //                 </a>\n  //               </h4>\n  //             </div>\n  //           </div>\n  //         ))\n  //       )}\n  //     </div>\n  //   )\n}\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n}\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n})\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub)\n"]},"metadata":{},"sourceType":"module"}